name: Release please workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - modules/**

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  find-release-changes:
    name: Change finder for modules folders
    runs-on: ubuntu-latest
    outputs:
      module-paths: ${{ steps.change-finder.outputs.result }}
    steps:
      - uses: actions/checkout@v4
      - id: change-finder
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          script: |
            const { execSync } = require('child_process');
            const { owner, repo } = context.repo;
            const latestRelease = await github.rest.repos.getLatestRelease({ owner, repo });
            console.log(`latest release: ${JSON.stringify(latestRelease.data)}`);
            execSync('git pull --tags');
            const status = execSync(`git diff --name-only ${latestRelease.data.tag_name} origin/main`, { encoding: 'utf-8'});
            console.log(`status: ${status}`);
            const changes = status.split('\n');
            console.log(`changes: ${changes}`);
            let modules_paths = new Set();
            for (const change of changes) {
              if (change.startsWith('modules/')) {
                  const library = change.split('/')[1];
                  modules_paths.add(library);
              };
            }
            modules_paths = Array.from(modules_paths);
            console.log(`paths: ${modules_paths}`);
            return modules_paths;

  validate-output:
    runs-on: ubuntu-latest
    needs: find-release-changes
    steps:
      - run: echo ${{fromJson(needs.find-release-changes.outputs.module-paths)}}

  release-pr:
    runs-on: ubuntu-latest
    needs: find-release-changes
    strategy:
      fail-fast: false
      matrix:
        module: ${{fromJson(needs.find-release-changes.outputs.module-paths)}}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release-please
        with:
          path: modules/${{ matrix.module }}
          changelog-path: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: terraform-module
          package-name: ${{ matrix.module }}
          monorepo-tags: true
          skip-github-release: true

  release-please-release:
    runs-on: ubuntu-latest
    needs: find-release-changes
    strategy:
      fail-fast: false
      matrix:
        module: ${{fromJson(needs.find-release-changes.outputs.module-paths)}}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: tag-release
        with:
          path: modules/${{ matrix.module }}
          changelog-path: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: terraform-module
          monorepo-tags: true
          package-name: ${{ matrix.module }}
          skip-github-pull-request: true
